- substr()
  1) 문자열을 자르기 위해 사용
  2) 시작 인덱스와 길이를 사용하여 잘라낸 문자열을 반환
  3) 음수 값을 사용하여 문자열의 끝에서부터 역으로 세어나갈 수 있음
  
  ex) str.substr(start, length)
    start : 추출을 시작할 인덱스를 나타내는 정수값
            인덱스는 0부터 시작
            음수 값은 문자열의 끝에서부터 역으로 세어나감

    length (선택사항) : 추출할 부분 문자열의 길이를 나타내는 정수값
                            인자를 생략하면 start 위치부터 문자열의 끝까지 반환

  시간 복잡도: O(n)
  n는 추출하려는 요소 또는 문자열의 길이

=====================================================

- slice()
  1) 문자열과 배열을 자르기 위해 사용
  2) 시작 인덱스와 끝 인덱스를 사용하여 잘라낸 문자열을 반환
  3) 끝 인덱스는 추출된 부분 문자열에 포함되지 않음
  4) 원본 배열은 변경되지 않음

  ex) str.slice(start, end)
    start : 추출을 시작할 인덱스를 나타내는 정수값
            인덱스는 0부터 시작
            음수 값은 문자열의 끝에서부터 역으로 세어나감

    end (선택사항) : 추출을 끝낼 인덱스를 나타내는 정수값
                         음수 값은 문자열의 끝에서부터 역으로 세어나감
                         이 인덱스는 추출되는 부분 문자열에 포함되지 않음
                         인자를 생략하면 start 위치부터 문자열의 끝까지 반환

  시간 복잡도: O(n)
  n는 추출하려는 요소 또는 문자열의 길이

=====================================================

- splice()
  1) 배열에서 요소를 제거하거나 새로운 요소를 추가하기 위해 사용
  2) start, deleteCount, item1, item2, ... 등 여러 매개변수를 사용
  3) 원본 배열을 수정

  ex) array.splice(startIndex, deleteCount, item1, item2, ...)
    startIndex : 변경을 시작할 인덱스
                   이 인덱스부터 요소를 제거하거나 새로운 요소를 추가

    deleteCount : 제거할 요소의 개수
                      이 값이 0이면 요소를 제거하지 않고 요소를 추가만 함
                      양수이면 해당 개수만큼 요소를 제거

    item1, item2, ... : 추가할 요소
                          이 값들은 startIndex 인덱스부터 순서대로 배열에 삽입

  시간 복잡도: O(n)
  n은 deleteCount에 전달된 제거할 요소의 개수를 의미
  추가되는 요소의 개수는 해당 시간 복잡도에 포함되지 않음

=====================================================

- split()
  1) 문자열을 구분자를 기준으로 분할하여 배열로 반환하는데 사용

  ex) str.split(separator, limit)
    separator : 문자열을 나누기 위한 구분자
                  이 구분자를 기준으로 문자열이 나뉘어 배열로 반환

    limit (선택 사항) : 반환할 배열의 최대 길이를 지정

  시간 복잡도: O(n)
  n은 입력된 문자열의 길이를 의미

=====================================================

- parseInt()
  1) 문자열을 정수로 변환하는데 사용

  ex) parseInt(string, radix)
    string : 변환할 문자열

    radix (선택 사항) : 변환에 사용할 진법을 나타내는 정수
                           기본값은 10진수

  시간 복잡도: O(n)
  n은 변환할 string 문자열의 길이

=====================================================

- [...new Set(arr)]
  1) 배열에서 중복된 요소를 제거하고 유일한 값들로 이루어진 배열을 생성하는데 사용

  2) 구성
      ① new Set
        a) 객체
        b) 중복된 값을 허용하지 않는 값을 저장하는 컬렉션
        c) 순서를 유지하며, 유일한 값을 저장하고 검색하는 데 사용
        
        Set 객체의 기본적인 사용법
        ⅰ) add()
          - 값을 추가 ex) set.add(value)
        ⅱ) delete()
          - 값을 제거 ex) set.delete(value)
        ⅲ ) has()
          - 특정 값이 존재하는지 확인 ex) set.has(value)
        ⅳ ) size
          - 객체의 크기(저장된 값의 개수)를 확인 ex) set.size

      ② ...
        a) 전개연산자
        b) 배열을 복사하거나 연결

        ... 전개연산자의 기본적인 사용법
        ⅰ) ...arr
          - arr의 요소를 개별적인 값으로 분리하여 출력
        ⅱ) [...arr1, ...arr2]
          - 각각 arr1과 arr2의 요소를 개별적인 값으로 분리하여 배열 생성
        
          ex) arr1 = [1, 2, 3]
              arr2 = [4, 5, 6]
              merged = [...arr1, ...arr2]
              console.log(merged); // [1, 2, 3, 4, 5, 6]

  시간 복잡도: O(n)
  n은 배열 arr의 길이

=====================================================